{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Finanse-app-backend",
    "description": "This is the API of the financial application \"KAPU$TA\". This API was developed by team № 5 Full-stack on-line course № 42 in the period from August 25 to September 8, 2022",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "servers": [
    {
      "url": "https://finance-wallet.herokuapp.com"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoints"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get user's information access by token",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/auth/balance": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "Update user's balance",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "New balance",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or Balance must be greater then 0",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/{type}": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Add transaction",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Type of transaction"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "You cannot create a transaction that exceeds the balance",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Delete transaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Id of transaction"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteTransactionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "password": {
                "type": "string",
                "description": "User's hash password",
                "example": "$2a$10$9iFFoJy751rTaWYDw7LSuOG3wZv6JFWl5tsJOFlT6RO3gsYKMtDDS"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": 10000
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzMGIwNDRiZTJhNThkOGFjNGVjN2JmNyIsImlhdCI6MTY2MTY2Njg4MiwiZXhwIjoxNjYxNjcwNDgyfQ.2rECvpQUhE94jwDubxmiYljXHK6gxAtJH2F_9VqejAA"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "Categorie's id",
                  "example": 1
                },
                "title": {
                  "type": "string",
                  "description": "Categorie's name",
                  "example": "Products"
                },
                "type": {
                  "type": "string",
                  "description": "Categorie's type",
                  "example": "expenses"
                }
              }
            }
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzMGIwNDRiZTJhNThkOGFjNGVjN2JmNyIsImlhdCI6MTY2MTY2Njg4MiwiZXhwIjoxNjYxNjcwNDgyfQ.2rECvpQUhE94jwDubxmiYljXHK6gxAtJH2F_9VqejAA"
          },
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": 10000
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "Categorie's id",
                  "example": 1
                },
                "title": {
                  "type": "string",
                  "description": "Categorie's name",
                  "example": "Products"
                },
                "type": {
                  "type": "string",
                  "description": "Categorie's type",
                  "example": "expenses"
                }
              }
            }
          }
        }
      },
      "BalanceRequest": {
        "type": "object",
        "required": [
          "balance"
        ],
        "properties": {
          "balance": {
            "type": "string",
            "description": "User's balance",
            "example": 10000
          }
        }
      },
      "BalanceResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": 10000
          }
        }
      },
      "addTransactionRequest": {
        "type": "object",
        "required": [
          "data",
          "description",
          "categories",
          "value"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "day",
              "mounth",
              "year"
            ],
            "properties": {
              "day": {
                "type": "string",
                "description": "Day",
                "example": "20"
              },
              "mounth": {
                "type": "string",
                "description": "Mounth",
                "example": "September"
              },
              "year": {
                "type": "string",
                "description": "Year",
                "example": "2022"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "Title of product or other",
            "example": "Coffee"
          },
          "categories": {
            "type": "string",
            "description": "Title of categorie",
            "example": "Products"
          },
          "value": {
            "type": "number",
            "description": "Amount of money",
            "example": 1000
          }
        }
      },
      "addTransactionResponse": {
        "type": "object",
        "required": [
          "data",
          "description",
          "categories",
          "value",
          "income"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "day",
              "mounth",
              "year"
            ],
            "properties": {
              "day": {
                "type": "string",
                "description": "Day",
                "example": "20"
              },
              "mounth": {
                "type": "string",
                "description": "Mounth",
                "example": "September"
              },
              "year": {
                "type": "string",
                "description": "Year",
                "example": "2022"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "Title of product or other",
            "example": "Coffee"
          },
          "categories": {
            "type": "string",
            "description": "Title of categorie",
            "example": "Products"
          },
          "value": {
            "type": "number",
            "description": "Amount of money",
            "example": 1000
          },
          "income": {
            "type": "boolean",
            "example": false
          },
          "owner": {
            "type": "string",
            "description": "Owner's ID",
            "example": "631090d2f175d13e2d133dca"
          }
        }
      },
      "deleteTransactionResponse": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": 10000
          },
          "message": {
            "type": "string",
            "description": "Status message",
            "example": "transaction deleted"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}